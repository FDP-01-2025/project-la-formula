#include <iostream>
#include <fstream>
#include <cstring>
#include "rlutil.h"
#include <windows.h>

using namespace std;

int coloreado(char c)
{
    switch (c)
    {
    case '.':
    case ':':
        return rlutil::YELLOW;
    case '#':
        return rlutil::MAGENTA;
    case '%':
    case '@':
        return rlutil::BLACK;
    case '=':
    case '|':
    case '+':
    case '-':
        return rlutil::WHITE;
    default:
        return rlutil::DARKGREY;
    }
}

void crearArchivoArte()
{
    ofstream archivo("arte.txt");
    if (!archivo)
        return;

    const char *lineas[] = {
        "####::::################################################################################################################",
        "#####::###################################::############################################################################",
        "#########################################::::##############################::######################.....*#%#############",
        "#######################################::::::::###########################::::#####################%:....=*%%######%%###",
        "%%%%%%%%%%%%%%%##########################::::###########################::::::::###################%+-.....=*%#####=+%##",
        "%%%%%%%%%%%%%%%###########################::##############################::::######################%#......:=#%###=+%##",
        "@@@%%+=====*%%%############################################################::########################*........*#########",
        "@@@%#::::::+%%%######################################################################################*........*#########",
        "@@@%#-:::::+%%%###########::########################################################################-:.......:*#########",
        "%%%%%######%%%%##########::::#################################::####################################:........:*#########",
        "%%%%%######%%%%########::::::::##############################::::#############################***..........::-*#########",
        "@@@%#-:::::+%%%##########::::##############################::::::::##########################*:..........::-+###########",
        "@@@%#::::::+%%%###########::#################################::::##############################=--:.....:-=#############",
        "@@@%%+=====*%%%###############################################::##################################*======###############",
        "%%%%%%%%%%%%%%%#########################################################################################################",
        "++=#%%@@@@@%%%%###########=-##################################%%#####%%#################################################",
        ":::*%@@@@@@@%%%###########++##################################%@%%%%%@%#################################################",
        ":::*%@@@@@@@%%%###############################################%@@@@@@@%##########################################=:#####",
        "###%%%%%%%%%%%%###########################################%%%%%%%%%%%%%%%%%%#########=:*#########################**#####",
        "%%%%%######%%%%########################=:*###############%%%%%%%%%%%######%%##########*#################################",
        "@@@%#::::::+%%%##########################################%%@@@@@%%%=:::::-%%####################################%#######",
        "@@@%%=====-*%%%##########################################%%@@@@@%%%+-=====%%###################################%@@@@@@@@",
        "%%%%%%%%%%%%%%%###########################################%%%%%%%%%%%%%%%%%%################################%%%%%%%%%%%%",
        "%%%%%++++++#%%%###########################################%%%%%%%%%%%%%%%%%%#####################%%%%%%#####%%%#++++*@%%",
        "@@@%#::::::+%%%###########################################%%%%%%%%%*++++++%%################%%%%%@@@@@@@%###%%%*:::.=@%%",
        "@@@%#::::::+%%%###########################################%@@@@@%%%=.:::::%%################@@@@@@@@@@@@@###%%%#****#%%%",
        "%%%%%******#%%%###########################################%%%%%%%%%#******%%################@@@%%@@%@@%@@###%%%%%%%%%%%%",
        "%%%%%%%%%%%%%%%###########################################%%%%%%%%%%%%%%%%%%################@@@@@@@@@@@@@###%%%%%%%%%%%%",
        "---*%@@@@@@%%%%#################################*#########%#####%%%%%%%%%%%%################@@@%%@@%@@%@@###%%%*---:=@%%",
        ":::*%@@@@@@@%%%################################+:+########%-::::#%%@@@@@@@%%################@@@@@@@@@@@@@###%%%#----+@%%",
        "==-#%@@@@@@%%%%###########################################%=---=#%%%@@@@@@%%################@@@%%@@%@@%@@###%%%%%%%%%%%%",
        "%%%%%%%%%%%%%%%%###########################################%%%%%%%%%%%%%%%%%%#####%%%%%@@@%%%@@@@@@@@@@@@@###%%%%%%%%%%%%",
        "**+#%*+++++#%%%###########################################%%%%%%%%%%%%%%%%%%####%@@@@@%@@@@@@@@@@@@@@@@@@###%%%%%%%%%%%%",
        ":::*%::::::+%%%###########################################%%%%%%%%%*++++++%%####%@@@@@%@@%@@@@@@@@@@@@@@@###%%%%@@@@@@%%",
        ":::*%::::::+%%%######%%%%%################################%@@@@@%%%=.:::::%%####%@%%@@%@@%@@@@@@@@@@@@@@@###%%%%%%%%%%%%",
        "***#%******#%%%%%%%%%@@@@@@%%%##*-+#######################%%%%%%%%%#******%%####%@@@@@@@@@@@@@@@@@@@@@@@@###%%%%%%%%%%%%",
        "%%%%%%%%%%%%%%%%@@@@@@@%%@%%@@@##+*#######################%%%%%%%%%%%%%%%%%%####%@@@@@@@@@@@@@@@@@@@@@@@@####%%%%%%%%%%%",
        "%%%%%@@@@@@%%%%%@@@@@@@@@@@@@@@###########################%@@@@@%%%+------%%####%@@@@%%%%%%%%%%%%%%%@@@@@####%%#----+@%%",
        "%%%%%@@@@@@%%%%%@@@@@@@%%@%%@%############################%@@@@@%%%=::::::%%####%@@@@%%%%%%%%%%%%%%%@@@@@###%%%#----+@%%",
        "%%%%%%%%%%%%%%%%@@@@@@@@@@@@@@@####################+*#####%@@@@@%%%+-----=%%####%@@@@%%%%#####%%%%%%@@@@@@@@%%%%%%%%%%%%",
        "%%%%%%%%%%%%%%%%@@@@@@@%@@%%@@%###################*:=#####%%%%%%%%%%%%%%%%%%####%@@@@%%%*::::=@%%%%%@@@@@@@@%%%%****#%%%",
        "%%%%%%%%%%%%%%%%@@@@@@@@@@@@@%%###########################%*****%%%%%%%%%%%%####%@@@@%%%*::::=@%%%%%@@@@@@@@%%%*::::=@%%",
    };

    for (const char *linea : lineas)
        archivo << linea << "\n";

    archivo.close();
    rlutil::hidecursor();
}

void mostrarArchivoArte(const char *nombreArchivo)
{
    ifstream archivo(nombreArchivo);
    if (!archivo)
        return;

    char linea[1024];
    while (archivo.getline(linea, sizeof(linea)))
    {
        int longitud = strlen(linea);
        for (int i = 0; i < longitud; ++i)
        {
            rlutil::setColor(coloreado(linea[i]));
            cout << linea[i];
        }
        for (int i = longitud; i < 124; ++i)
        {
            cout << ' ';
        }
        rlutil::resetColor();
        cout << endl;
    }

    archivo.close();
    rlutil::hidecursor();
}

// Nueva función para dibujar la caja en consola
void dibujarCaja(int x, int y, int ancho, int alto)
{
    rlutil::setColor(rlutil::WHITE);
    // línea superior
    rlutil::locate(x, y);
    cout << "+";
    for (int i = 0; i < ancho - 2; ++i)
        cout << "-";
    cout << "+";

    // líneas laterales
    for (int i = 1; i < alto - 1; ++i)
    {
        rlutil::locate(x, y + i);
        cout << "|";
        rlutil::locate(x + ancho - 1, y + i);
        cout << "|";
    }

    // línea inferior
    rlutil::locate(x, y + alto - 1);
    cout << "+";
    for (int i = 0; i < ancho - 2; ++i)
        cout << "-";
    cout << "+";

    rlutil::resetColor();
}

void mostrarTextoAnimadoEnPosicion(const string &texto, int x, int y, int delayMs = 50)
{
    rlutil::locate(x, y);
    for (char c : texto)
    {
        cout << c << flush;
        rlutil::msleep(delayMs);
    }
}

void mostrarMensajeFelicitacion()
{
    // Coordenadas para la caja y texto (ajusta si quieres moverla)
    int cajaX = 33;
    int cajaY = 25;
    string mensaje = "Congratulations on beating the game. Starting summary...";
    int anchoCaja = (int)mensaje.size() + 4; // espacio para bordes y márgenes
    int altoCaja = 3;

    dibujarCaja(cajaX, cajaY, anchoCaja, altoCaja);
    mostrarTextoAnimadoEnPosicion(mensaje, cajaX + 2, cajaY + 1, 60);
}

void mostrarCinematicaFinal()
{
    rlutil::cls();
    const char *final[] = {
        "===================================================================================================================",
        "||                                                                                                               ||",
        "||                                                                                                               ||",
        "||  █████╗     ███████╗    ████████╗    ███████╗    ██████╗     ███╗   ███╗     █████╗     ████████╗    ██╗  ██╗ ||",
        "|| ██╔══██╗    ██╔════╝    ╚══██╔══╝    ██╔════╝    ██╔══██╗    ████╗ ████║    ██╔══██╗    ╚══██╔══╝    ██║  ██║ ||",
        "|| ███████║    █████╗         ██║       █████╗      ██████╔╝    ██╔████╔██║    ███████║       ██║       ███████║ ||",
        "|| ██╔══██║    ██╔══╝         ██║       ██╔══╝      ██╔══██╗    ██║╚██╔╝██║    ██╔══██║       ██║       ██╔══██║ ||",
        "|| ██║  ██║    ██║            ██║       ███████╗    ██║  ██║    ██║ ╚═╝ ██║    ██║  ██║       ██║       ██║  ██║ ||",
        "|| ╚═╝  ╚═╝    ╚═╝            ╚═╝       ╚══════╝    ╚═╝  ╚═╝    ╚═╝     ╚═╝    ╚═╝  ╚═╝       ╚═╝       ╚═╝  ╚═╝ ||",
        "||                                                                                                               ||",
        "||                                                                                                               ||",
        "||===============================================================================================================||",
        "||                                                                                                               ||",
        "||                                    == G  A  M  E    S  U  M  M  A  R  Y ==                                    ||",
        "||                                                                                                               ||",
        "||              > Enemies Defeated   :     XXXXX                                                                 ||",
        "||              > Bosses Defeated    :     XXX                                                                   ||",
        "||              > Level Reached      :     XX                                                                    ||",
        "||              > Total Play Time    :     XXh XXm XXs                                                           ||",
        "||              >                                                                                                ||",
        "||              >                                                                                                ||",
        "||                                                                                                               ||",
        "||                                    Thank you for playing! See you soon.                                       ||",
        "||                                                                                                               ||",
        "===================================================================================================================",
    };

    for (const char *linea : final)
    {
        cout << linea << endl;
        rlutil::msleep(150);
    }

    rlutil::anykey();
}

int main()
{
    SetConsoleOutputCP(CP_UTF8);
    crearArchivoArte();
    mostrarArchivoArte("arte.txt");

    mostrarMensajeFelicitacion();

    rlutil::msleep(3000); // espera 3 segundos

    mostrarCinematicaFinal();

    return 0;
}
